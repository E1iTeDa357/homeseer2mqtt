[{"id":"815d58fa.102f88","type":"mqtt in","z":"a92a988d.6dafa8","name":"","topic":"domoticz/out","qos":"2","broker":"cae262ab.45512","x":110,"y":200,"wires":[["b4990da3.cd67a"]]},{"id":"b4990da3.cd67a","type":"function","z":"a92a988d.6dafa8","name":"Logic","func":"// Variables\nvar homeseerjson = JSON.parse(global.get('homeseerjson'));\nvar domoticzdevices = JSON.parse(flow.get('domoticzdevices'));\nvar domoticzmqttout = JSON.parse(msg.payload);\nvar dname = domoticzmqttout.name;\nvar stype = domoticzmqttout.stype;\nvar switchtype = domoticzmqttout.switchType;\nvar dtype = domoticzmqttout.dtype;\nvar nvalue = domoticzmqttout.nvalue;\n\n// Check if HomeSeer device name exactly matches device name in Domoticz\nfor (i = 0; i < homeseerjson.Devices.length; i=i+1) {\n    var hsname = (homeseerjson.Devices[i].name);\n    \n    // Only proceed further if we have a name match\n    if(hsname == dname) {\n        // Store the HomeSeer ref for that name in variable\n        var hsref = homeseerjson.Devices[i].ref;\n        \n        // Light switches / On or Off\n        if(stype == 'Switch' && dtype == 'Light/Switch' && switchtype == 'On/Off') {\n            if(nvalue == '0') {var dcommand = 'Off'}\n            if(nvalue == '1') {var dcommand = 'On'}\n            msg.payload = {}\n            msg.payload.ref = hsref;\n            msg.payload.label = dcommand;\n        return msg;\n        }\n    }\n}\n\n","outputs":1,"noerr":0,"x":250,"y":200,"wires":[["df42a90e.330858"]]},{"id":"72640e84.9295e","type":"comment","z":"a92a988d.6dafa8","name":"Domoticz devices control HomeSeer devices with same name","info":"","x":260,"y":160,"wires":[]},{"id":"436eba69.a2d0f4","type":"mqtt out","z":"a92a988d.6dafa8","name":"","topic":"domoticz/in","qos":"","retain":"","broker":"cae262ab.45512","x":670,"y":320,"wires":[]},{"id":"96c42668.9eb0e8","type":"http request","z":"a92a988d.6dafa8","name":"Get list of Domoticz Devices","method":"GET","ret":"txt","url":"http://USERNAME:PASSWORD401@192.168.0.5/json.htm?type=devices&filter=all&used=true&order=Name","tls":"","x":320,"y":80,"wires":[["3271ad0e.8a0542"]]},{"id":"e3cc894.b486578","type":"inject","z":"a92a988d.6dafa8","name":"Request","topic":"","payload":"","payloadType":"date","repeat":"30","crontab":"","once":true,"onceDelay":0.1,"x":120,"y":80,"wires":[["96c42668.9eb0e8"]]},{"id":"3271ad0e.8a0542","type":"function","z":"a92a988d.6dafa8","name":"Store in flow","func":"flow.set('domoticzdevices',msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":80,"wires":[[]]},{"id":"9ba45994.6b7018","type":"comment","z":"a92a988d.6dafa8","name":"Get list of Domoticz devices and store in flow","info":"","x":230,"y":40,"wires":[]},{"id":"1b099f7f.e78131","type":"comment","z":"a92a988d.6dafa8","name":"HomeSeer devices send sensor updates to Domoticz","info":"","x":230,"y":280,"wires":[]},{"id":"5aea4253.881adc","type":"mqtt in","z":"a92a988d.6dafa8","name":"","topic":"homeseer/out","qos":"2","broker":"cae262ab.45512","x":110,"y":320,"wires":[["944ed50c.f862e8","1d31a6f6.aeb229"]]},{"id":"944ed50c.f862e8","type":"function","z":"a92a988d.6dafa8","name":"Logic","func":"// Variables\nvar homeseermqtt = JSON.parse(msg.payload);\nvar hbatt = homeseermqtt.battery;\nvar hname = homeseermqtt.name;\nvar hvalue = homeseermqtt.value;\nvar domoticzdevices = JSON.parse(flow.get('domoticzdevices'));\n\n// Clear msg.payload\nmsg.payload = {}\n    \n// Check if HomeSeer device name exactly matches device name in Domoticz\nfor (iq = 0; iq < domoticzdevices.result.length; iq=iq+1) {\n    var dname = (domoticzdevices.result[iq].Name);\n    var didx = (domoticzdevices.result[iq].idx);\n    var dswitchtype = domoticzdevices.result[iq].SwitchType;\n    var dtype = domoticzdevices.result[iq].Type;\n    var dsubtype = domoticzdevices.result[iq].SubType;\n    var ddata = domoticzdevices.result[iq].Data;\n    \n    // Only proceed further if we have a name match\n    if(hname == dname) {\n        \n        // Motion Sensors:\n        if (dswitchtype == 'Motion Sensor'){\n            msg.payload = {}\n            if(hvalue == 255 || hvalue == 8) {\n                msg.payload.nvalue = 1;\n                var dstate = \"ON\";\n            } else if (hvalue === 0) {\n                msg.payload.nvalue = 0;\n                var dstate = \"OFF\";\n            }\n            msg.payload.idx = parseInt(didx);\n            msg.payload.svalue = dstate;\n            if (typeof hbatt !== 'undefined' && hbatt !== null){msg.payload.Battery = Math.round(hbatt);}\n            return msg;\n        }\n        // Door Contact Sensors:\n        if (dswitchtype == 'Door Contact'){\n            msg.payload = {}\n            if(hvalue == 255) {\n                msg.payload.nvalue = 1;\n                var dstate = \"Open\";\n            } else if (hvalue === 0) {\n                msg.payload.nvalue = 0;\n                var dstate = \"Closed\";\n            }\n            msg.payload.idx = parseInt(didx);\n            msg.payload.svalue = dstate;\n            if (typeof hbatt !== 'undefined' && hbatt !== null){msg.payload.Battery = Math.round(hbatt);}\n            return msg;\n        }\n        // Aeotec Wallmotes:\n        if (dname.includes(\"Wallmote\") && dswitchtype == 'On/Off'){\n            msg.payload = {}\n            msg.payload.nvalue = 1;\n            var dstate = \"ON\";\n            msg.payload.idx = parseInt(didx);\n            msg.payload.svalue = dstate;\n            if (typeof hbatt !== 'undefined' && hbatt !== null){msg.payload.Battery = Math.round(hbatt);}\n            return msg;\n        }\n        // Temperature Sensors:\n        if (dtype == 'Temp'){\n            msg.payload = {}\n            msg.payload.nvalue = 0;\n            msg.payload.svalue = hvalue.toFixed(2).toString();\n            msg.payload.idx = parseInt(didx);\n            if (typeof hbatt !== 'undefined' && hbatt !== null){msg.payload.Battery = Math.round(hbatt);}\n            return msg;\n        }\n        // Lux / Luminance Sensors:\n        if (dtype == 'Lux'){\n            msg.payload = {}\n            msg.payload.nvalue = 0;\n            msg.payload.svalue = hvalue.toFixed(2).toString();\n            msg.payload.idx = parseInt(didx);\n            if (typeof hbatt !== 'undefined' && hbatt !== null){msg.payload.Battery = Math.round(hbatt);}\n            return msg;\n        }\n        // Watts:\n        if (ddata.includes(\"Watt\")){\n            msg.payload = {}\n            msg.payload.nvalue = 0;\n            msg.payload.svalue = hvalue.toFixed(2).toString();\n            msg.payload.idx = parseInt(didx);\n            return msg;\n        }\n    }\n}","outputs":1,"noerr":0,"x":250,"y":320,"wires":[["acd73cc6.b7c9b","436eba69.a2d0f4"]]},{"id":"acd73cc6.b7c9b","type":"debug","z":"a92a988d.6dafa8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":670,"y":400,"wires":[]},{"id":"df42a90e.330858","type":"mqtt out","z":"a92a988d.6dafa8","name":"","topic":"homeseer/in","qos":"","retain":"","broker":"cae262ab.45512","x":390,"y":200,"wires":[]},{"id":"1d31a6f6.aeb229","type":"function","z":"a92a988d.6dafa8","name":"Logic kWh","func":"// Variables\nvar homeseermqtt = JSON.parse(msg.payload);\nvar hbatt = homeseermqtt.battery;\nvar hname = homeseermqtt.name;\nvar hvalue = homeseermqtt.value;\nvar hwattkwh = homeseermqtt.kwh;\nvar domoticzdevices = JSON.parse(flow.get('domoticzdevices'));\n\n// Clear msg.payload\nmsg.payload = {}\n    \n// HomeSeer name minus last word for matching\nvar hrawIndex = hname.lastIndexOf(\" \");\nvar hrawname = hname.substring(0, hrawIndex);\n    \n// Check if HomeSeer device name exactly matches device name in Domoticz\nfor (iq = 0; iq < domoticzdevices.result.length; iq=iq+1) {\n    var dname = (domoticzdevices.result[iq].Name);\n    var didx = (domoticzdevices.result[iq].idx);\n    var dswitchtype = domoticzdevices.result[iq].SwitchType;\n    var dtype = domoticzdevices.result[iq].Type;\n    var dsubtype = domoticzdevices.result[iq].SubType;\n    var ddata = domoticzdevices.result[iq].Data;\n    \n    // Domoticz name minus last word for matching\n    var drawIndex = dname.lastIndexOf(\" \");\n    var drawname = dname.substring(0, drawIndex);\n    \n    // kWh Sensors\n    if (hrawname == drawname){\n        if (dsubtype.includes(\"kWh\") && typeof hwattkwh !== 'undefined' && hwattkwh !== null){\n            msg.payload = {}\n            msg.payload.nvalue = 0;\n            msg.payload.svalue = (hvalue.toFixed(2).toString() + ';' + hwattkwh.toString());\n            msg.payload.idx = parseInt(didx);\n            return msg;\n        }\n    }\n}","outputs":1,"noerr":0,"x":270,"y":360,"wires":[["436eba69.a2d0f4","acd73cc6.b7c9b"]]},{"id":"cae262ab.45512","type":"mqtt-broker","z":"","name":"","broker":"192.168.0.5","port":"8883","tls":"9895f781.42a5e8","clientid":"","usetls":true,"compatmode":true,"keepalive":"15","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9895f781.42a5e8","type":"tls-config","z":"","name":"","cert":"","key":"","ca":"","certname":"m2mqtt_srv.crt","keyname":"m2mqtt_srv.key","caname":"m2mqtt_ca.crt","servername":"","verifyservercert":false}]
